#pragma checksum "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e82e0b5a63ed160571fb5cc484d5c2ce2e093564"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Manage_Views_Dashboard_Index), @"mvc.1.0.view", @"/Areas/Manage/Views/Dashboard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\_ViewImports.cshtml"
using SunsetHotel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\_ViewImports.cshtml"
using SunsetHotel.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\_ViewImports.cshtml"
using SunsetHotel.Areas.Manage.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
using System.Linq;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e82e0b5a63ed160571fb5cc484d5c2ce2e093564", @"/Areas/Manage/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f093b1a0b311fac9cc4e22a09fcc54b45452af94", @"/Areas/Manage/Views/_ViewImports.cshtml")]
    public class Areas_Manage_Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DashBoardViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets1/libs/apexcharts/apexcharts.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Manage/Views/Shared/_Layout.cshtml";
    var RadialLabel = Newtonsoft.Json.JsonConvert.SerializeObject(Model.radialChart.Select(x => x.Labels).ToList());
    var RadialSeries = Newtonsoft.Json.JsonConvert.SerializeObject(Model.radialChart.Select(x => x.Series).ToList());
    var BlogCategoryLabel = Newtonsoft.Json.JsonConvert.SerializeObject(Model.blogCategory.Select(x => x.Labels).ToList());
    var BlogCategorySeries = Newtonsoft.Json.JsonConvert.SerializeObject(Model.blogCategory.Select(x => x.Series).ToList());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""main-content"">

    <div class=""page-content"">
        <div class=""container-fluid"">

            <!-- start page title -->
            <div class=""row"">
                <div class=""col-12"">
                    <div class=""page-title-box d-sm-flex align-items-center justify-content-between"">
                        <h4 class=""mb-sm-0"">Dashboard</h4>

                        <div class=""page-title-right"">
                            <ol class=""breadcrumb m-0"">
                                <li class=""breadcrumb-item""><a href=""javascript: void(0);"">Upzet</a></li>
                                <li class=""breadcrumb-item active"">Dashboard</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-xl-3 col-sm-6"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div cl");
            WriteLiteral(@"ass=""d-flex text-muted"">
                                <div class=""flex-shrink-0  me-3 align-self-center"">
                                    <div class=""avatar-sm"">
                                        <div class=""avatar-title bg-light rounded-circle text-primary font-size-20"">
                                            <i class=""ri-money-dollar-circle-line""></i>
                                        </div>
                                    </div>
                                </div>
                                <div class=""flex-grow-1 overflow-hidden"">
                                    <p class=""mb-1"">Monthly Earning</p>
                                    <h5 class=""mb-3"">$ ");
#nullable restore
#line 46 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                  Write(ViewBag.Monthly);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
                                </div>
                            </div>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->
                <div class=""col-xl-3 col-sm-6"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""d-flex text-muted"">
                                <div class=""flex-shrink-0  me-3 align-self-center"">
                                    <div class=""avatar-sm"">
                                        <div class=""avatar-title bg-light rounded-circle text-primary font-size-20"">
                                            <i class=""ri-money-dollar-box-line""></i>
                                        </div>
                                    </div>
                                </div>
                                <div class=""flex-grow-1");
            WriteLiteral(" overflow-hidden\">\r\n                                    <p class=\"mb-1\">Annual Earning</p>\r\n                                    <h5 class=\"mb-3\">$ ");
#nullable restore
#line 68 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                  Write(ViewBag.Annual);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
                                </div>
                            </div>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->
                <!-- end col -->
                <input type=""hidden"" id=""acceptedpercent""");
            BeginWriteAttribute("value", " value=\"", 3956, "\"", 3988, 1);
#nullable restore
#line 78 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
WriteAttributeValue("", 3964, ViewBag.AcceptedPercent, 3964, 24, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
                <div class=""col-xl-3 col-sm-6"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""d-flex text-muted"">
                                <div class=""flex-shrink-0  me-3 align-self-center"">
                                    <div class=""avatar-sm"">
                                        <div class=""avatar-title bg-light rounded-circle text-primary font-size-20"">
                                            <i class=""fas fa-tasks""></i>
                                        </div>
                                    </div>
                                </div>
                                <div class=""flex-grow-1 overflow-hidden"">
                                    <p class=""mb-1"">Pending Bookings</p>
                                    <h5 class=""mb-3"">");
#nullable restore
#line 92 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                Write(ViewBag.Pending);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h5>
                                </div>
                            </div>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                </div>
                <div class=""col-xl-3 col-sm-6"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""d-flex text-muted"">
                                <div class=""flex-shrink-0 me-3 align-self-center"" style="" margin-top: -10px"">
                                    <div id=""radialchart-3"" class=""apex-charts"" dir=""ltr"" style=""height:61px""></div>
                                </div>
                                <div class=""flex-grow-1 overflow-hidden"">
                                    <p class=""mb-1"">Booking Accept Rate</p>
                                    <h5 class=""mb-3"">");
#nullable restore
#line 109 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                Write(ViewBag.AcceptedPercent);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" %</h5>
                                </div>
                            </div>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->
                <div class=""row"">
                    <div class=""col-lg-6"">
                        <div class=""card"">
                            <div class=""card-body"">
                                <h4 class=""card-title mb-4"">Reading Count by Blog Categories</h4>

                                <div id=""radial_chart"" class=""apex-charts"" dir=""ltr""></div>
                            </div>
                        </div>
                        <!--end card-->
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-lg-6"">
                        <div class=""card"">
                            <div class=""card-body"">
                           ");
            WriteLiteral(@"     <h4 class=""card-title mb-4"">Donut Chart</h4>

                                <div id=""donut_chart"" class=""apex-charts"" dir=""ltr""></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- container-fluid -->
</div>
<!-- End Page-content -->
</div>
");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <!-- Plugin Js-->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e82e0b5a63ed160571fb5cc484d5c2ce2e09356413356", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <!-- demo js-->
    <script>
        var options, chart;
        $(""#line_chart_datalabel"").length && (options = {
            chart: {
                height: 380,
                type: ""line"",
                zoom: {
                    enabled: !1
                },
                toolbar: {
                    show: !1
                }
            },
            colors: [""#0db4d6"", ""#f1b44c""],
            dataLabels: {
                enabled: !0
            },
            stroke: {
                width: [3, 3],
                curve: ""straight""
            },
            series: [{
                name: ""High - 2018"",
                data: [26, 24, 32, 36, 33, 31, 33]
            }, {
                name: ""Low - 2018"",
                data: [14, 11, 16, 12, 17, 13, 12]
            }],
            title: {
                text: ""Average High & Low Temperature"",
                align: ""left""
            },
            grid: {
                row: {
             ");
                WriteLiteral(@"       colors: [""transparent"", ""transparent""],
                    opacity: .2
                },
                borderColor: ""#f1f1f1""
            },
            markers: {
                style: ""inverted"",
                size: 6
            },
            xaxis: {
                categories: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul""],
                title: {
                    text: ""Month""
                }
            },
            yaxis: {
                title: {
                    text: ""Temperature""
                },
                min: 5,
                max: 40
            },
            legend: {
                position: ""top"",
                horizontalAlign: ""right"",
                floating: !0,
                offsetY: -25,
                offsetX: -5
            },
            responsive: [{
                breakpoint: 600,
                options: {
                    chart: {
                        toolbar: {
                            sh");
                WriteLiteral(@"ow: !1
                        }
                    },
                    legend: {
                        show: !1
                    }
                }
            }]
        },
            (chart = new ApexCharts(document.querySelector(""#line_chart_datalabel""), options)).render()), $(""#line_chart_dashed"").length && (options = {
                chart: {
                    height: 380,
                    type: ""line"",
                    zoom: {
                        enabled: !1
                    },
                    toolbar: {
                        show: !1
                    }
                },
                colors: [""#11c46e"", ""#0db4d6"", ""#fb4d53""],
                dataLabels: {
                    enabled: !1
                },
                stroke: {
                    width: [3, 4, 3],
                    curve: ""straight"",
                    dashArray: [0, 8, 5]
                },
                series: [{
                    name: ""Session Duratio");
                WriteLiteral(@"n"",
                    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]
                }, {
                    name: ""Page Views"",
                    data: [36, 42, 60, 42, 13, 18, 29, 37, 36, 51, 32, 35]
                }, {
                    name: ""Total Visits"",
                    data: [89, 56, 74, 98, 72, 38, 64, 46, 84, 58, 46, 49]
                }],
                title: {
                    text: ""Page Statistics"",
                    align: ""left""
                },
                markers: {
                    size: 0,
                    hover: {
                        sizeOffset: 6
                    }
                },
                xaxis: {
                    categories: [""01 Jan"", ""02 Jan"", ""03 Jan"", ""04 Jan"", ""05 Jan"", ""06 Jan"", ""07 Jan"", ""08 Jan"", ""09 Jan"", ""10 Jan"", ""11 Jan"", ""12 Jan""]
                },
                tooltip: {
                    y: [{
                        title: {
                            formatter: function (e) {
   ");
                WriteLiteral(@"                             return e + "" (mins)""
                            }
                        }
                    }, {
                        title: {
                            formatter: function (e) {
                                return e + "" per session""
                            }
                        }
                    }, {
                        title: {
                            formatter: function (e) {
                                return e
                            }
                        }
                    }]
                },
                grid: {
                    borderColor: ""#f1f1f1""
                }
            },
            (chart = new ApexCharts(document.querySelector(""#line_chart_dashed""), options)).render()), $(""#spline_area"").length && (options = {
                    chart: {
                        height: 350,
                        type: ""area""
                    },
                    dataLabels: {
          ");
                WriteLiteral(@"              enabled: !1
                    },
                    stroke: {
                        curve: ""smooth"",
                        width: 3
                    },
                    series: [{
                        name: ""series1"",
                        data: [34, 40, 28, 52, 42, 109, 100]
                    }, {
                        name: ""series2"",
                        data: [32, 60, 34, 46, 34, 52, 41]
                    }],
                    colors: [""#eff2f7"", ""#3d8ef8""],
                    xaxis: {
                        type: ""datetime"",
                        categories: [""2018-09-19T00:00:00"", ""2018-09-19T01:30:00"", ""2018-09-19T02:30:00"", ""2018-09-19T03:30:00"", ""2018-09-19T04:30:00"", ""2018-09-19T05:30:00"", ""2018-09-19T06:30:00""]
                    },
                    grid: {
                        borderColor: ""#f1f1f1""
                    },
                    tooltip: {
                        x: {
                            format: ""dd/M");
                WriteLiteral(@"M/yy HH:mm""
                        }
                    }
                },
            (chart = new ApexCharts(document.querySelector(""#spline_area""), options)).render()), $(""#column_chart"").length && (options = {
                        chart: {
                            height: 350,
                            type: ""bar"",
                            toolbar: {
                                show: !1
                            }
                        },
                        plotOptions: {
                            bar: {
                                horizontal: !1,
                                columnWidth: ""45%"",
                                endingShape: ""rounded""
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        stroke: {
                            show: !0,
                            width: 2,
                            ");
                WriteLiteral(@"colors: [""transparent""]
                        },
                        series: [{
                            name: ""Net Profit"",
                            data: [46, 57, 59, 54, 62, 58, 64, 60, 66]
                        }, {
                            name: ""Revenue"",
                            data: [74, 83, 102, 97, 86, 106, 93, 114, 94]
                        }, {
                            name: ""Free Cash Flow"",
                            data: [37, 42, 38, 26, 47, 50, 54, 55, 43]
                        }],
                        colors: [""#eff2f7"", ""#3d8ef8"", ""#11c46e""],
                        xaxis: {
                            categories: [""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct""]
                        },
                        yaxis: {
                            title: {
                                text: ""$ (thousands)""
                            }
                        },
                        grid: {
                         ");
                WriteLiteral(@"   borderColor: ""#f1f1f1""
                        },
                        fill: {
                            opacity: 1
                        },
                        tooltip: {
                            y: {
                                formatter: function (e) {
                                    return ""$ "" + e + "" thousands""
                                }
                            }
                        }
                    },
            (chart = new ApexCharts(document.querySelector(""#column_chart""), options)).render()), $(""#column_chart_datalabel"").length && (options = {
                            chart: {
                                height: 350,
                                type: ""bar"",
                                toolbar: {
                                    show: !1
                                }
                            },
                            plotOptions: {
                                bar: {
                                ");
                WriteLiteral(@"    dataLabels: {
                                        position: ""top""
                                    }
                                }
                            },
                            dataLabels: {
                                enabled: !0,
                                formatter: function (e) {
                                    return e + ""%""
                                },
                                offsetY: -20,
                                style: {
                                    fontSize: ""12px"",
                                    colors: [""#304758""]
                                }
                            },
                            series: [{
                                name: ""Inflation"",
                                data: [2.5, 3.2, 5, 10.1, 4.2, 3.8, 3, 2.4, 4, 1.2, 3.5, .8]
                            }],
                            colors: [""#0db4d6""],
                            grid: {
                                ");
                WriteLiteral(@"borderColor: ""#f1f1f1""
                            },
                            xaxis: {
                                categories: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                                position: ""top"",
                                labels: {
                                    offsetY: -18
                                },
                                axisBorder: {
                                    show: !1
                                },
                                axisTicks: {
                                    show: !1
                                },
                                crosshairs: {
                                    fill: {
                                        type: ""gradient"",
                                        gradient: {
                                            colorFrom: ""#D8E3F0"",
                                            colorTo: ""#BED1E6"",
                           ");
                WriteLiteral(@"                 stops: [0, 100],
                                            opacityFrom: .4,
                                            opacityTo: .5
                                        }
                                    }
                                },
                                tooltip: {
                                    enabled: !0,
                                    offsetY: -35
                                }
                            },
                            fill: {
                                gradient: {
                                    shade: ""light"",
                                    type: ""horizontal"",
                                    shadeIntensity: .25,
                                    gradientToColors: void 0,
                                    inverseColors: !0,
                                    opacityFrom: 1,
                                    opacityTo: 1,
                                    stops: [50, 0, 100, 100]
    ");
                WriteLiteral(@"                            }
                            },
                            yaxis: {
                                axisBorder: {
                                    show: !1
                                },
                                axisTicks: {
                                    show: !1
                                },
                                labels: {
                                    show: !1,
                                    formatter: function (e) {
                                        return e + ""%""
                                    }
                                }
                            },
                            title: {
                                text: ""Monthly Inflation in Argentina, 2002"",
                                floating: !0,
                                offsetY: 320,
                                align: ""center"",
                                style: {
                                    color: ""#444");
                WriteLiteral(@"""
                                }
                            }
                        },
            (chart = new ApexCharts(document.querySelector(""#column_chart_datalabel""), options)).render()), $(""#bar_chart"").length && (options = {
                                chart: {
                                    height: 350,
                                    type: ""bar"",
                                    toolbar: {
                                        show: !1
                                    }
                                },
                                plotOptions: {
                                    bar: {
                                        horizontal: !0
                                    }
                                },
                                dataLabels: {
                                    enabled: !1
                                },
                                series: [{
                                    data: [380, 430, 450, 475, 55");
                WriteLiteral(@"0, 584, 780, 1100, 1220, 1365]
                                }],
                                colors: [""#7c8a96""],
                                grid: {
                                    borderColor: ""#f1f1f1""
                                },
                                xaxis: {
                                    categories: [""South Korea"", ""Canada"", ""United Kingdom"", ""Netherlands"", ""Italy"", ""France"", ""Japan"", ""United States"", ""China"", ""Germany""]
                                }
                            },
            (chart = new ApexCharts(document.querySelector(""#bar_chart""), options)).render()), $(""#mixed_chart"").length && (options = {
                                    chart: {
                                        height: 350,
                                        type: ""line"",
                                        stacked: !1,
                                        toolbar: {
                                            show: !1
                              ");
                WriteLiteral(@"          }
                                    },
                                    stroke: {
                                        width: [0, 2, 4],
                                        curve: ""smooth""
                                    },
                                    plotOptions: {
                                        bar: {
                                            columnWidth: ""50%""
                                        }
                                    },
                                    colors: [""#11c46e"", ""#0db4d6"", ""#fb4d53""],
                                    series: [{
                                        name: ""Team A"",
                                        type: ""column"",
                                        data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30]
                                    }, {
                                        name: ""Team B"",
                                        type: ""area"",
                                 ");
                WriteLiteral(@"       data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43]
                                    }, {
                                        name: ""Team C"",
                                        type: ""line"",
                                        data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39]
                                    }],
                                    fill: {
                                        opacity: [.85, .25, 1],
                                        gradient: {
                                            inverseColors: !1,
                                            shade: ""light"",
                                            type: ""vertical"",
                                            opacityFrom: .85,
                                            opacityTo: .55,
                                            stops: [0, 100, 100, 100]
                                        }
                                    },
                                    labels: [""01/");
                WriteLiteral(@"01/2003"", ""02/01/2003"", ""03/01/2003"", ""04/01/2003"", ""05/01/2003"", ""06/01/2003"", ""07/01/2003"", ""08/01/2003"", ""09/01/2003"", ""10/01/2003"", ""11/01/2003""],
                                    markers: {
                                        size: 0
                                    },
                                    legend: {
                                        offsetY: -10
                                    },
                                    xaxis: {
                                        type: ""datetime""
                                    },
                                    yaxis: {
                                        title: {
                                            text: ""Points""
                                        }
                                    },
                                    tooltip: {
                                        shared: !0,
                                        intersect: !1,
                                        y: {
        ");
                WriteLiteral(@"                                    formatter: function (e) {
                                                return void 0 !== e ? e.toFixed(0) + "" points"" : e
                                            }
                                        }
                                    },
                                    grid: {
                                        borderColor: ""#f1f1f1""
                                    }
                                },
            (chart = new ApexCharts(document.querySelector(""#mixed_chart""), options)).render()), $(""#radial_chart"").length && (options = {
                                        chart: {
                                            height: 370,
                                            type: ""radialBar""
                                        },
                                        plotOptions: {
                                            radialBar: {
                                                dataLabels: {
               ");
                WriteLiteral(@"                                     name: {
                                                        fontSize: ""22px""
                                                    },
                                                    value: {
                                                        fontSize: ""16px""
                                                    },
                                                    total: {
                                                        show: !0,
                                                        label: ""Total"",
                                                        formatter: function (e) {
                                                            return ");
#nullable restore
#line 601 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                              Write(ViewBag.BlogCount);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        series: ");
#nullable restore
#line 607 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                           Write(Html.Raw(RadialLabel));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n                                        labels: ");
#nullable restore
#line 608 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                           Write(Html.Raw(RadialSeries));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                                        colors: [""#3d8ef8"", ""#11c46e"", ""#f1b44c"", ""#fb4d53"", ""#1EFBC6"", ""#393280"", ""#58DFC0"", ""#017854"", ""#A32A3A"", ""#FED7BF"", ""#822ACC"", ""#589BC6"", ""#8F148F""]
                                    },
            (chart = new ApexCharts(document.querySelector(""#radial_chart""), options)).render()), $(""#pie_chart"").length && (options = {
                                            chart: {
                                                height: 320,
                                                type: ""pie""
                                            },
                                            series: [44, 55, 41, 17, 15],
                                            labels: [""Series 1"", ""Series 2"", ""Series 3"", ""Series 4"", ""Series 5""],
                                            colors: [""#3d8ef8"", ""#11c46e"", ""#f1b44c"", ""#fb4d53"", ""#eff2f7""],
                                            legend: {
                                                show: !0,
           ");
                WriteLiteral(@"                                     position: ""bottom"",
                                                horizontalAlign: ""center"",
                                                verticalAlign: ""middle"",
                                                floating: !1,
                                                fontSize: ""14px"",
                                                offsetX: 0,
                                                offsetY: -10
                                            },
                                            responsive: [{
                                                breakpoint: 600,
                                                options: {
                                                    chart: {
                                                        height: 240
                                                    },
                                                    legend: {
                                                        show: !1
             ");
                WriteLiteral(@"                                       }
                                                }
                                            }]
                                        },
            (chart = new ApexCharts(document.querySelector(""#pie_chart""), options)).render()), $(""#donut_chart"").length && (options = {
                                                chart: {
                                                    height: 320,
                                                    type: ""donut""
                                                },
                                                series: ");
#nullable restore
#line 646 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                   Write(Html.Raw(BlogCategoryLabel));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n                                                labels: ");
#nullable restore
#line 647 "C:\Users\Kanan Qarazada\Desktop\Full_Stack_Project\Backend\SunsetHotel\Areas\Manage\Views\Dashboard\Index.cshtml"
                                                   Write(Html.Raw(BlogCategorySeries));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                                                colors: [""#3d8ef8"", ""#11c46e"", ""#0db4d6"", ""#fb4d53"", ""#8F148F"", ""#58DFC0"", ""#017854"", ""#A32A3A"", ""#FED7BF"", ""#822ACC"", ""#589BC6"", ""#EFF2F7""],
                                                legend: {
                                                    show: !0,
                                                    position: ""bottom"",
                                                    horizontalAlign: ""center"",
                                                    verticalAlign: ""middle"",
                                                    floating: !1,
                                                    fontSize: ""14px"",
                                                    offsetX: 0,
                                                    offsetY: -10
                                                },
                                                responsive: [{
                                                    breakpoint: 600,
                      ");
                WriteLiteral(@"                              options: {
                                                        chart: {
                                                            height: 240
                                                        },
                                                        legend: {
                                                            show: !1
                                                        }
                                                    }
                                                }]
                                            },
            (chart = new ApexCharts(document.querySelector(""#donut_chart""), options)).render());
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DashBoardViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
